package com.nodmp.algorithm.leetcode.lc_2;

import com.nodmp.algorithm.common.ListNode;

import java.util.List;

//ÁªôÂá∫‰∏§‰∏™ ÈùûÁ©∫ ÁöÑÈìæË°®Áî®Êù•Ë°®Á§∫‰∏§‰∏™ÈùûË¥üÁöÑÊï¥Êï∞„ÄÇÂÖ∂‰∏≠ÔºåÂÆÉ‰ª¨ÂêÑËá™ÁöÑ‰ΩçÊï∞ÊòØÊåâÁÖß ÈÄÜÂ∫è ÁöÑÊñπÂºèÂ≠òÂÇ®ÁöÑÔºåÂπ∂‰∏îÂÆÉ‰ª¨ÁöÑÊØè‰∏™ËäÇÁÇπÂè™ËÉΩÂ≠òÂÇ® ‰∏Ä‰Ωç Êï∞Â≠ó„ÄÇ
//
// Â¶ÇÊûúÔºåÊàë‰ª¨Â∞ÜËøô‰∏§‰∏™Êï∞Áõ∏Âä†Ëµ∑Êù•ÔºåÂàô‰ºöËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÈìæË°®Êù•Ë°®Á§∫ÂÆÉ‰ª¨ÁöÑÂíå„ÄÇ
//
// ÊÇ®ÂèØ‰ª•ÂÅáËÆæÈô§‰∫ÜÊï∞Â≠ó 0 ‰πãÂ§ñÔºåËøô‰∏§‰∏™Êï∞ÈÉΩ‰∏ç‰ºö‰ª• 0 ÂºÄÂ§¥„ÄÇ
//
// Á§∫‰æãÔºö
//
// ËæìÂÖ•Ôºö(2 -> 4 -> 3) + (5 -> 6 -> 4)
//ËæìÂá∫Ôºö7 -> 0 -> 8
//ÂéüÂõ†Ôºö342 + 465 = 807
//
// Related Topics ÈìæË°® Êï∞Â≠¶
// üëç 4810 üëé 0
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode node = new ListNode(-1);
        ListNode head = node;
        int count = 0;
        while (l1 != null || l2 != null || count != 0) {
            int total;
            if (l1 == null && l2 == null) {
                total = count;
            } else if (l1 == null) {
                //l1 == null
                total = l2.val + count;
                l2 = l2.next;
            } else if (l2 == null) {
                //l2 == null
                total = l1.val + count;
                l1 = l1.next;
            } else {
                //l1 l2 ÈÉΩ‰∏çÊòØnull
                total = l1.val + l2.val + count;
                l1 = l1.next;
                l2 = l2.next;
            }
            node.next = new ListNode(total % 10);
            count = total / 10;
            node = node.next;
        }
        return head.next;
    }

    public static void main(String[] args) {
        ListNode node1 = new ListNode(5);
        ListNode node2 = new ListNode(5);
        ListNode node3 = new Solution().addTwoNumbers(node1, node2);
        System.out.println(node3);

    }
}
